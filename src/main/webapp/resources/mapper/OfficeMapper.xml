<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--suppress ALL -->
<mapper namespace="cn.ddzu.shop.dao.OfficeMapperDao">
    <update id="drop">
        drop table if exists office
    </update>

    <update id="create">
        create table office
        (
            id               bigint,
            name             varchar(255),
            building_id      bigint,
            address          varchar(255),
            type_id          bigint,
            area             float,
            area_range_id    bigint,
            price            float,
            price_range_id   bigint,
            decoration_id    bigint,
            utilization_rate float,
            can_register     boolean,
            rent_free_period varchar(255),
            notes            varchar(8192),
            img_list         varchar(8192),
            edit_time        date,
            hot              boolean default false,
            valid            boolean default true,
            primary key (id)
        ) default charset = utf8
    </update>

    <select id="selectAll" resultType="cn.ddzu.shop.entity.Office">
        select * from office
    </select>

    <insert id="insert" parameterType="cn.ddzu.shop.entity.Office">
        insert into office (id, name, building_id, address, type_id, area, area_range_id, price, price_range_id
        , decoration_id, utilization_rate, can_register, rent_free_period, notes, img_list, edit_time, hot, valid) values (
            #{data.id},
            #{data.name},
            #{data.building_id},
            #{data.address},
            #{data.type_id},
            #{data.area},
            #{data.area_range_id},
            #{data.price},
            #{data.price_range_id},
            #{data.decoration_id},
            #{data.utilization_rate},
            #{data.can_register},
            #{data.rent_free_period},
            #{data.notes},
            #{data.img_list},
            #{data.edit_time},
            #{data.hot},
            true
        )
    </insert>

    <update id="update" parameterType="cn.ddzu.shop.entity.Office">
        update office
        set
            name = #{data.name},
            building_id = #{data.building_id},
            address = #{data.address},
            type_id = #{data.type_id},
            area = #{data.area},
            area_range_id = #{data.area_range_id},
            price = #{data.price},
            price_range_id = #{data.price_range_id},
            decoration_id = #{data.decoration_id},
            utilization_rate = #{data.utilization_rate},
            can_register = #{data.can_register},
            rent_free_period = #{data.rent_free_period},
            notes = #{data.notes},
            img_list = #{data.img_list},
            edit_time = #{data.edit_time},
            hot = #{data.hot}
        where id = #{data.id}
    </update>

    <update id="delete" parameterType="java.lang.Long">
        update office
        set valid = false
        where id = #{id}
    </update>

    <update id="deleteByBuilding" parameterType="java.lang.Long">
        update office
        set valid = false
        where building_id = #{building_id}
    </update>

    <select id="selectById" parameterType="java.lang.Long" resultType="cn.ddzu.shop.entity.Office">
        select
        office.id,
        office.name,
        office.building_id,
        office.address,
        office.type_id,
        office.area,
        office.area_range_id,
        office.price,
        office.price_range_id,
        office.decoration_id,
        office.utilization_rate,
        office.can_register,
        office.rent_free_period,
        office.notes,
        office.img_list,
        type.name as type_name,
        area_range.name as area_range_name,
        price_range.name as price_range_name,
        decoration.name as decoration_name
        from office
        left join type on office.type_id = type.id
        left join area_range on office.area_range_id = area_range.id
        left join price_range on office.price_range_id = price_range.id
        left join decoration on office.decoration_id = decoration.id
        where office.valid = true and office.id = #{id};
    </select>

    <select id="select" resultType="cn.ddzu.shop.entity.Office">
        select
        office.id,
        office.name,
        office.building_id,
        office.address,
        office.type_id,
        office.area,
        office.area_range_id,
        office.price,
        office.price_range_id,
        office.decoration_id,
        office.utilization_rate,
        office.can_register,
        office.rent_free_period,
        office.notes,
        office.img_list,
        district.name as district_name,
        zone.name as zone_name,
        type.name as type_name,
        area_range.name as area_range_name,
        price_range.name as price_range_name,
        decoration.name as decoration_name
        from office
        left join building on office.building_id = building.id
        left join zone on building.zone_id = zone.id
        left join district on zone.district_id = district.id
        left join type on office.type_id = type.id
        left join area_range on office.area_range_id = area_range.id
        left join price_range on office.price_range_id = price_range.id
        left join decoration on office.decoration_id = decoration.id
        where building.valid = true and office.valid = true
        <if test="keyword != null">
            and office.name like "%"#{keyword}"%"
        </if>
        <if test="building_id != null">
            and office.building_id = #{building_id}
        </if>
        <if test="metro_name != null">
            and building.metro_name_list like "%"#{metro_name}"%"
        </if>
        <if test="type_id != null">
            and office.type_id = #{type_id}
        </if>
        <if test="area_range_id != null">
            and office.area_range_id = #{area_range_id}
        </if>
        <if test="price_range_id != null">
            and office.price_range_id = #{price_range_id}
        </if>
        <if test="decoration_id != null">
            and office.decoration_id = #{decoration_id}
        </if>
        <if test="district_id == zone_id">
            and building.zone_id in
            (select zone.id
            from zone
            <if test="district_id != null">
                where district_id = #{district_id}
            </if>
            )
        </if>
        <if test="district_id != zone_id">
            and building.zone_id = #{zone_id}
        </if>
        order by office.id desc
        <if test="step > 0">
            limit #{start}, #{step};
        </if>
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*) from office
        left join building on office.building_id = building.id
        where building.valid = true and office.valid = true
        <if test="keyword != null">
            and office.name like "%"#{keyword}"%"
        </if>
        <if test="building_id != null">
            and office.building_id = #{building_id}
        </if>
        <if test="metro_name != null">
            and building.metro_name_list like "%"#{metro_name}"%"
        </if>
        <if test="type_id != null">
            and office.type_id = #{type_id}
        </if>
        <if test="area_range_id != null">
            and office.area_range_id = #{area_range_id}
        </if>
        <if test="price_range_id != null">
            and office.price_range_id = #{price_range_id}
        </if>
        <if test="decoration_id != null">
            and office.decoration_id = #{decoration_id}
        </if>
        <if test="district_id == zone_id">
            and building.zone_id in
            (select zone.id
            from zone
            <if test="district_id != null">
                where district_id = #{district_id}
            </if>
            )
        </if>
        <if test="district_id != zone_id">
            and building.zone_id = #{zone_id}
        </if>
    </select>

    <select id="selectWhereHot" resultType="cn.ddzu.shop.entity.Office" parameterType="java.lang.Integer">
        select
            id,
            name,
            building_id,
            address,
            type_id,
            area,
            area_range_id,
            price,
            price_range_id,
            decoration_id,
            utilization_rate,
            can_register,
            rent_free_period,
            notes,
            img_list,
            edit_time,
            hot
        from office
        where valid = true and hot = true
        order by edit_time desc
        limit #{limit}
    </select>

    <select id="selectWhereNew" resultType="cn.ddzu.shop.entity.Office" parameterType="java.lang.Integer">
        select
            id,
            name,
            building_id,
            address,
            type_id,
            area,
            area_range_id,
            price,
            price_range_id,
            decoration_id,
            utilization_rate,
            can_register,
            rent_free_period,
            notes,
            img_list,
            edit_time,
            hot
        from office
        where valid = true
        order by edit_time desc
        limit #{limit}
    </select>
</mapper>