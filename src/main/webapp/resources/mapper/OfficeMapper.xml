<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--suppress ALL -->
<mapper namespace="cn.ddzu.shop.dao.OfficeMapperDao">
    <update id="drop">
        drop table if exists office
    </update>

    <update id="create">
        create table office
        (
            id               bigint,
            name             varchar(255),
            building_id      bigint,
            address          varchar(255),
            type_id          bigint,
            area             float,
            area_range_id    bigint,
            price            float,
            price_range_id   bigint,
            decoration_id    bigint,
            utilization_rate float,
            can_register     boolean,
            rent_free_period varchar(255),
            notes            varchar(8192),
            img_list         varchar(8192),
            primary key (id)
        ) default charset = utf8
    </update>

    <insert id="add" parameterType="cn.ddzu.shop.entity.Office">
        insert into office values (
            #{office.id}
            ,#{office.name}
            ,#{office.building_id}
            ,#{office.address}
            ,#{office.type_id}
            ,#{office.area}
            ,#{office.area_range_id}
            ,#{office.price}
            ,#{office.price_range_id}
            ,#{office.decoration_id}
            ,#{office.utilization_rate}
            ,#{office.can_register}
            ,#{office.rent_free_period}
            ,#{office.notes}
            ,#{office.img_list}
        )
    </insert>

    <delete id="delete" parameterType="java.lang.Long">
        delete from office where id = #{id}
    </delete>

    <update id="update" parameterType="cn.ddzu.shop.entity.Office">
        update office
        set
            name = #{office.name}
            building_id = #{office.building_id}
            address = #{office.address}
            type_id = #{office.type_id}
            area = #{office.area}
            area_range_id = #{office.area_range_id}
            price = #{office.price}
            price_range_id = #{office.price_range_id}
            decoration_id = #{office.decoration_id}
            utilization_rate = #{office.utilization_rate}
            can_register = #{office.can_register}
            rent_free_period = #{office.rent_free_period}
            notes = #{office.notes}
            img_list = #{office.img_list}
        where id = #{office.id}
    </update>

    <select id="selectById" parameterType="java.lang.Long" resultType="cn.ddzu.shop.entity.Office">
        select
        office.id,
        office.name,
        office.building_id,
        office.address,
        office.type_id,
        office.area,
        office.area_range_id,
        office.price,
        office.price_range_id,
        office.decoration_id,
        office.utilization_rate,
        office.can_register,
        office.rent_free_period,
        office.notes,
        office.img_list,
        type.name as type_name,
        area_range.name as area_range_name,
        price_range.name as price_range_name,
        decoration.name as decoration_name
        from office
        left join type on office.type_id = type.id
        left join area_range on office.area_range_id = area_range.id
        left join price_range on office.price_range_id = price_range.id
        left join decoration on office.decoration_id = decoration.id
        where office.id = #{id};
    </select>

    <select id="select" resultType="cn.ddzu.shop.entity.Office">
        select
        office.id,
        office.name,
        office.building_id,
        office.address,
        office.type_id,
        office.area,
        office.area_range_id,
        office.price,
        office.price_range_id,
        office.decoration_id,
        office.utilization_rate,
        office.can_register,
        office.rent_free_period,
        office.notes,
        office.img_list,
        district.name as district_name,
        zone.name as zone_name,
        type.name as type_name,
        area_range.name as area_range_name,
        price_range.name as price_range_name,
        decoration.name as decoration_name
        from office
        left join building on office.building_id = building.id
        left join zone on building.zone_id = zone.id
        left join district on zone.district_id = district.id
        left join type on office.type_id = type.id
        left join area_range on office.area_range_id = area_range.id
        left join price_range on office.price_range_id = price_range.id
        left join decoration on office.decoration_id = decoration.id
        <where>
            <if test="keyword != null">
                and office.name like "%"#{keyword}"%"
            </if>
            <if test="building_id != null">
                and office.building_id = #{building_id}
            </if>
            <if test="metro_name != null">
                and building.metro_name_list like "%"#{metro_name}"%"
            </if>
            <if test="type_id != null">
                and office.type_id = #{type_id}
            </if>
            <if test="area_range_id != null">
                and office.area_range_id = #{area_range_id}
            </if>
            <if test="price_range_id != null">
                and office.price_range_id = #{price_range_id}
            </if>
            <if test="decoration_id != null">
                and office.decoration_id = #{decoration_id}
            </if>
            <if test="district_id == zone_id">
                and building.zone_id in
                (select zone.id
                from zone
                <if test="district_id != null">
                    where district_id = #{district_id}
                </if>
                )
            </if>
            <if test="district_id != zone_id">
                and building.zone_id = #{zone_id}
            </if>
        </where>
        order by office.id desc
        <if test="step > 0">
            limit #{start}, #{step};
        </if>
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*) from office
        left join building on office.building_id = building.id
        <where>
            <if test="keyword != null">
                and office.name like "%"#{keyword}"%"
            </if>
            <if test="building_id != null">
                and office.building_id = #{building_id}
            </if>
            <if test="metro_name != null">
                and office.metro_name_list like "%"#{metro_name}"%"
            </if>
            <if test="type_id != null">
                and office.type_id = #{type_id}
            </if>
            <if test="area_range_id != null">
                and office.area_range_id = #{area_range_id}
            </if>
            <if test="price_range_id != null">
                and office.price_range_id = #{price_range_id}
            </if>
            <if test="decoration_id != null">
                and office.decoration_id = #{decoration_id}
            </if>
            <if test="district_id == zone_id">
                and building.zone_id in
                (select zone.id
                from zone
                <if test="district_id != null">
                    where district_id = #{district_id}
                </if>
                )
            </if>
            <if test="district_id != zone_id">
                and building.zone_id = #{zone_id}
            </if>
        </where>
    </select>
</mapper>