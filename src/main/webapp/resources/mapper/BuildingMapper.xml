<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--suppress ALL -->
<mapper namespace="cn.ddzu.shop.dao.BuildingMapperDao">

    <insert id="insertBuilding" parameterType="cn.ddzu.shop.entity.Building">
        INSERT INTO BUILDING VALUES (
            NULL
            ,#{building.name}
            ,#{building.zone_id}
            ,#{building.address}
            ,#{building.metro_name_list}
            ,#{building.img_list}
        );
    </insert>

    <select id="selectBuildingList" resultType="cn.ddzu.shop.entity.Building">
        SELECT
        BUILDING.ID ,
        BUILDING.NAME,
        BUILDING.ZONE_ID,
        BUILDING.ADDRESS,
        BUILDING.METRO_NAME_LIST,
        BUILDING.IMG_LIST,
        OFFICE.TYPE_ID,
        OFFICE.AREA_VALUE,
        OFFICE.AREA_RANGE_ID,
        OFFICE.PRICE,
        OFFICE.PRICE_RANGE_ID,
        OFFICE.DECORATION_ID,
        ZONE.NAME AS ZONE_NAME,
        DISTRICT.NAME AS DISTRICT_NAME,
        TYPE.NAME AS TYPE_NAME,
        AREA_RANGE.NAME AS AREA_RANGE_NAME,
        PRICE_RANGE.NAME AS PRICE_RANGE_NAME,
        DECORATION.NAME AS DECORATION_NAME
        FROM BUILDING
        LEFT JOIN OFFICE ON BUILDING.ID = OFFICE.BUILDING_ID
        LEFT JOIN ZONE ON BUILDING.ZONE_ID = ZONE.ID
        LEFT JOIN DISTRICT ON ZONE.DISTRICT_ID = DISTRICT.ID
        LEFT JOIN TYPE ON OFFICE.TYPE_ID = TYPE.ID
        LEFT JOIN AREA_RANGE ON OFFICE.AREA_RANGE_ID = AREA_RANGE.ID
        LEFT JOIN PRICE_RANGE ON OFFICE.PRICE_RANGE_ID = PRICE_RANGE.ID
        LEFT JOIN DECORATION ON OFFICE.DECORATION_ID = DECORATION.ID
        WHERE OFFICE.ID IN (SELECT MIN(ID) FROM OFFICE
        <where>
            <if test="type_id != null">
                AND OFFICE.TYPE_ID = #{type_id}
            </if>
            <if test="area_range_id != null">
                AND OFFICE.AREA_RANGE_ID = #{area_range_id}
            </if>
            <if test="price_range_id != null">
                AND OFFICE.PRICE_RANGE_ID = #{price_range_id}
            </if>
            <if test="decoration_id != null">
                AND OFFICE.DECORATION_ID = #{decoration_id}
            </if>
        </where>
        GROUP BY OFFICE.BUILDING_ID
        )
        <if test="id != null">
            AND BUILDING.ID = #{id}
        </if>
        <if test="keyword != null">
            AND BUILDING.NAME LIKE #{keyword}
        </if>
        <if test="zone_id != null">
            AND BUILDING.ZONE_ID = #{zone_id}
        </if>
        <if test="metro_name != null">
            AND BUILDING.METRO_NAME_LIST LIKE #{metro_name}
        </if>
        ORDER BY OFFICE.ID DESC
        <if test="step > 0">
            LIMIT #{start}, #{step};
        </if>
    </select>

    <select id="countBuildingList" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM BUILDING
        LEFT JOIN OFFICE ON BUILDING.ID = OFFICE.BUILDING_ID
        WHERE OFFICE.ID IN (SELECT MIN(ID) FROM OFFICE
        <where>
            <if test="type_id != null">
                AND OFFICE.TYPE_ID = #{type_id}
            </if>
            <if test="area_range_id != null">
                AND OFFICE.AREA_RANGE_ID = #{area_range_id}
            </if>
            <if test="price_range_id != null">
                AND OFFICE.PRICE_RANGE_ID = #{price_range_id}
            </if>
            <if test="decoration_id != null">
                AND OFFICE.DECORATION_ID = #{decoration_id}
            </if>
        </where>
        GROUP BY OFFICE.BUILDING_ID
        )
        <if test="id != null">
            AND BUILDING.ID = #{id}
        </if>
        <if test="keyword != null">
            AND BUILDING.NAME LIKE #{keyword}
        </if>
        <if test="zone_id != null">
            AND BUILDING.ZONE_ID = #{zone_id}
        </if>
        <if test="metro_name != null">
            AND BUILDING.METRO_NAME_LIST LIKE #{metro_name}
        </if>
        GROUP BY BUILDING.ID
        ;
    </select>
</mapper>